-- ENTIDADES:
-- USUARIOS - CONTRASEÑA,NOMBRE,USERNAME,SUMMONER NAME 
-- ROLES - ID,NOMBRE
-- PERMISOS- ID,NOMBRE,PREMIUM(BOOLEAN)
-- MENÚ -ID,NOMBRE
-- FAVORITOS (CHAMPS, ITEMS, ETC)


CREATE TABLE USER (
    ID_USER INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    PASS VARCHAR(255) NOT NULL,
    USERNAME VARCHAR(255) NOT NULL UNIQUE,
    SUMMONER_NAME VARCHAR(255) NOT NULL UNIQUE,
    SUMMONER_TAG VARCHAR(255) NOT NULL UNIQUE,
    BIRTHDATE DATE NOT NULL,
    GENDER CHAR(1) NOT NULL CHECK (GENDER IN ('M', 'F', 'O')),
    ALTER TABLE USER
    ADD CONSTRAINT UK_SUMMONERACCOUNT_USER UNIQUE (SUMMONER_NAME,SUMMONER_TAG);
);

CREATE TABLE ROLE (
    ID_ROLE INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(255) NOT NULL,
    CONSTRAINT UK_ROLES_NOMBRE UNIQUE (NOMBRE)
);

CREATE TABLE PERMISSIONS (
    ID_PERMISSION INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(255) NOT NULL,
    PREMIUM BOOLEAN NOT NULL,
    CONSTRAINT UK_PERMISSIONS_NAME UNIQUE (NAME)
);
CREATE TABLE MENU (
    ID_MENU INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(255) NOT NULL,
    CONSTRAINT UK_MENU_NAME UNIQUE (NAME)
);
CREATE TABLE FAVORITES (
    ID_FAVORITE INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    ID_USER INT NOT NULL,
    ID_CHAMP INT NOT NULL,
    ID_ITEM INT NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USER(ID_USER)
);

-- Creating User_Role table to establish many-to-many relationship between User and Role
CREATE TABLE USER_ROLE (
    ID_USER INT NOT NULL,
    ID_ROLE INT NOT NULL,
    PRIMARY KEY (ID_USER, ID_ROLE),
    FOREIGN KEY (ID_USER) REFERENCES USER(ID_USER),
    FOREIGN KEY (ID_ROLE) REFERENCES ROLE(ID_ROLE)
);

-- Creating User_Permission table to establish many-to-many relationship between User and Permissions
CREATE TABLE USER_PERMISSION (
    ID_USER INT NOT NULL,
    ID_PERMISSION INT NOT NULL,
    PRIMARY KEY (ID_USER, ID_PERMISSION),
    FOREIGN KEY (ID_USER) REFERENCES USER(ID_USER),
    FOREIGN KEY (ID_PERMISSION) REFERENCES PERMISSIONS(ID_PERMISSION)
);

-- Creating User_Menu table to establish many-to-many relationship between User and Menu
CREATE TABLE USER_MENU (
    ID_USER INT NOT NULL,
    ID_MENU INT NOT NULL,
    PRIMARY KEY (ID_USER, ID_MENU),
    FOREIGN KEY (ID_USER) REFERENCES USER(ID_USER),
    FOREIGN KEY (ID_MENU) REFERENCES MENU(ID_MENU)
);
CREATE TABLE USERS (
    ID_USER SERIAL PRIMARY KEY,
    PASS VARCHAR(255) NOT NULL,
    USERNAME VARCHAR(255) NOT NULL UNIQUE,
    SUMMONER_NAME VARCHAR(255) NOT NULL UNIQUE,
    SUMMONER_TAG VARCHAR(255) NOT NULL UNIQUE,
    BIRTHDATE DATE NOT NULL,
    GENDER CHARACTER(1) NOT NULL CHECK (GENDER IN ('M', 'F', 'O')),
    CONSTRAINT UK_SUMMONERACCOUNT_USER UNIQUE (SUMMONER_NAME,SUMMONER_TAG)
);

CREATE TABLE ROLE (
    ID_ROLE SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    CONSTRAINT UK_ROLE_NAME UNIQUE (NAME)
);

CREATE TABLE PERMISSIONS (
    ID_PERMISSION SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    PREMIUM BOOL NOT NULL,
    CONSTRAINT UK_PERMISSIONS_NAME UNIQUE (NAME)
);

CREATE TABLE MENU (
    ID_MENU SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    CONSTRAINT UK_MENU_NAME UNIQUE (NAME)
);

CREATE TABLE FAVORITES (
    ID_FAVORITE SERIAL PRIMARY KEY,
    ID_USER INT NOT NULL,
    ID_CHAMP INT NOT NULL,
    ID_ITEM INT NOT NULL,
    FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER),
    CONSTRAINT FK_FAVORITES_USER FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER)
);

CREATE TABLE USER_ROLE (
    ID_USER INT NOT NULL,
    ID_ROLE INT NOT NULL,
    PRIMARY KEY (ID_USER, ID_ROLE),
    CONSTRAINT FK_USERROLE_USER FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER),
    CONSTRAINT FK_USERROLE_ROLE FOREIGN KEY (ID_ROLE) REFERENCES ROLE(ID_ROLE)
);

CREATE TABLE USER_PERMISSION (
    ID_USER INT NOT NULL,
    ID_PERMISSION INT NOT NULL,
    PRIMARY KEY (ID_USER, ID_PERMISSION),
    CONSTRAINT FK_USERPERMISSION_USER FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER),
    CONSTRAINT FK_USERPERMISSION_PERMISSION FOREIGN KEY (ID_PERMISSION) REFERENCES PERMISSIONS(ID_PERMISSION)
);

CREATE TABLE USER_MENU (
    ID_USER INT NOT NULL,
    ID_MENU INT NOT NULL,
    PRIMARY KEY (ID_USER, ID_MENU),
    CONSTRAINT FK_USERMENU_USER FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER),
    CONSTRAINT FK_USERMENU_MENU FOREIGN KEY (ID_MENU) REFERENCES MENU(ID_MENU)
);

SELECT 'USERS' AS table_name, ID_USER, PASS, USERNAME, SUMMONER_NAME, SUMMONER_TAG, BIRTHDATE, GENDER
FROM USERS;
SELECT 'ROLE' AS table_name, ID_ROLE, NAME
FROM ROLE;
SELECT 'PERMISSIONS' AS table_name, ID_PERMISSION, NAME, PREMIUM
FROM PERMISSIONS;
SELECT 'MENU' AS table_name, ID_MENU, NAME
FROM MENU;
SELECT 'FAVORITES' AS table_name, ID_FAVORITE, ID_USER, ID_CHAMP, ID_ITEM
FROM FAVORITES;
SELECT 'USER_ROLE' AS table_name, ID_USER, ID_ROLE
FROM USER_ROLE;
SELECT 'USER_PERMISSION' AS table_name, ID_USER, ID_PERMISSION
FROM USER_PERMISSION;
SELECT 'USER_MENU' AS table_name, ID_USER, ID_MENU
FROM USER_MENU;

